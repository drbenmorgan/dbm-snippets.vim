# standard file/module preamble
snippet preamble
	# - ${1:preamble}
	#
	${2}

# copyright notice
snippet copyright
	#-----------------------------------------------------------------------
	# Copyright ${1:`strftime("%Y")`} `g:snips_author`
	# Copyright ${2:$1} University of Warwick
	${3}

# GPLv3 License
snippet apply_gplv3_prog
	# This program is free software: you can redistribute it and/or modify
	# it under the terms of the GNU General Public License as published by
	# the Free Software Foundation, either version 3 of the License, or
	# (at your option) any later version.
	#
	# This program is distributed in the hope that it will be useful,
	# but WITHOUT ANY WARRANTY; without even the implied warranty of
	# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	# GNU General Public License for more details.
	#
	# You should have received a copy of the GNU General Public License
	# along with this program.  If not, see <http://www.gnu.org/licenses/>.

snippet apply_gplv3_file
	# This file is part of ${1}.
	#
	# ${1} is free software: you can redistribute it and/or modify
	# it under the terms of the GNU General Public License as published by
	# the Free Software Foundation, either version 3 of the License, or
	# (at your option) any later version.
	#
	# ${1} is distributed in the hope that it will be useful,
	# but WITHOUT ANY WARRANTY; without even the implied warranty of
	# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	# GNU General Public License for more details.
	#
	# You should have received a copy of the GNU General Public License
	# along with ${1}.  If not, see <http://www.gnu.org/licenses/>.


# BSD 3-clause ("Modified BSD") License
snippet mbsdl
	#-----------------------------------------------------------------------
	# Copyright (c) ${1:`strftime("%Y")`}, ${2:`g:snips_author`}
	# All rights reserved.
	#
	# Redistribution and use in source and binary forms, with or without
	# modification, are permitted provided that the following conditions are 
	# met:
	#
	#  * Redistributions of source code must retain the above copyright
	#    notice, this list of conditions and the following disclaimer.
	#
	#  * Redistributions in binary form must reproduce the above copyright
	#    notice, this list of conditions and the following disclaimer in 
	#    the documentation and/or other materials provided with the 
	#    distribution.
	#
	#  * Neither the name of the ${2} nor the
	#    names of its contributors may be used to endorse or promote 
	#    products derived from this software without specific prior 
	#    written permission.
	#
	# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
	# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
	# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
	# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
	# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
	# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
	# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
	# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
	# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
	# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING 
	# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
	# POSSIBILITY OF SUCH DAMAGE.
	#
	#-----------------------------------------------------------------------

snippet apply_mbsdl
	#-----------------------------------------------------------------------
	# Copyright (c) ${1:`strftime("%Y")`}, ${2:`g:snips_author`}
	#
	# Distributed under the OSI-approved BSD 3-Clause License (the "License");
	# see accompanying file License.txt for details.
	#
	# This software is distributed WITHOUT ANY WARRANTY; without even the
	# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
	# See the License for more information.
	#-----------------------------------------------------------------------

# Boost License
snippet boostl
	#-----------------------------------------------------------------------
	# Boost Software License - Version 1.0 - August 17th, 2003
	#
	# Permission is hereby granted, free of charge, to any person or 
	# organization obtaining a copy of the software and accompanying 
	# documentation covered by this license (the "Software") to use, 
	# reproduce, display, distribute, execute, and transmit the Software, 
	# and to prepare derivative works of the Software, and to permit 
	# third-parties to whom the Software is furnished to do so, all subject 
	# to the following:
	#
	# The copyright notices in the Software and this entire statement, 
	# including the above license grant, this restriction and the following 
	# disclaimer, must be included in all copies of the Software, in whole 
	# or in part, and all derivative works of the Software, unless such 
	# copies or derivative works are solely in the form of machine-executable
	# object code generated by a source language processor.
	#
	# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
	# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
	# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND 
	# NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE 
	# DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER 
	# LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
	# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
	# DEALINGS IN THE SOFTWARE.
	#-----------------------------------------------------------------------

snippet apply_boostl
	#          Copyright ${1:`g:snips_author`} ${2:`strftime("%Y")`}
	# Distributed under the Boost Software License, Version 1.0.
	#    (See accompanying file LICENSE_1_0.txt or copy at
	#          http://www.boost.org/LICENSE_1_0.txt)

# New comment block
snippet comblock
	#-----------------------------------------------------------------------
	# ${1:comment}

# Enforce out of source build
snippet cmoutofsource
	#-----------------------------------------------------------------------
	# Enforce an out-of-source build.
	# Should be the first action in the CMakeLists.txt
	#
	if(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})
	  message(STATUS "${1:foo} requires an out-of-source build.")
	  message(STATUS "Please remove these files from ${CMAKE_BINARY_DIR} first:")
	  message(STATUS "    CMakeCache.txt")
	  message(STATUS "    CMakeFiles")
	  message(STATUS "Once these files are removed, create a separate directory")
		message(STATUS "and run CMake from there, pointing it to:")
		message(STATUS "    ${CMAKE_SOURCE_DIR}")
		message(FATAL_ERROR "in-source build detected")
	endif()
	${2}

# CMake "header guard" to prevent multiple reparsing of a module
snippet hguard
	# - Include guard
	if(__`tolower(Filename())`_isloaded)
		return()
	endif()
	set(__`tolower(Filename())`_isloaded YES)
	${1}

# Idiom for creating Dynamic and Archive libraries with the same name
snippet cmduallib
	if(BUILD_SHARED_LIBS)
	    # Add the dynamic library target
		add_library(${1:foo} SHARED ${2:ARGS})

		# We set a property to prevent concurrent dynamic/archive builds
	  # clobbering each other (needed on CMake < 2.6.x, but doesn't hurt
	  # on CMake >= 2.8
		set_target_properties($1 PROPERTIES CLEAN_DIRECT_OUTPUT 1)

		# Add the install command here if needed...
	endif()

	if(BUILD_STATIC_LIBS)
	  # Add the archive library target
		add_library($1-static STATIC $2)

	  # As above, we set a property to prevent concurrent dynamic/archive
	  # builds clobbering each other.
		set_target_properties($1-static PROPERTIES CLEAN_DIRECT_OUTPUT 1)

		# We rename the output library to the main name.
	  # Note that you should remove this if you want the archive and dynamic
	  # libraries to have different names - e.g. on Windows, you may want
	  # to distinguish the archive .lib from the DLL import .lib!
		set_target_properties($1-static PROPERTIES OUTPUT_NAME $1)

	  # Add the install command here if needed...
	endif()

# Standard versioning setup
snippet cmcustomversion
	#-----------------------------------------------------------------------
	# Hardcode the definition of this project's version
	# Compatible with CPack versioning
	#
	set(${PROJECT_NAME}_VERSION_MAJOR "${1:0}")
	set(${PROJECT_NAME}_VERSION_MINOR "${2:0}")
	set(${PROJECT_NAME}_VERSION_PATCH "${3:0}")

	set(${PROJECT_NAME}_VERSION
	    "${${PROJECT_NAME}_VERSION_MAJOR}.${${PROJECT_NAME}_VERSION_MINOR}.${${PROJECT_NAME}_VERSION_PATCH}")
	${4}


# Project specific module path
snippet cmcustommodule
	#-----------------------------------------------------------------------
	# Prepend this project's custom module path(s) to CMAKE_MODULE_PATH
	#
	set(CMAKE_MODULE_PATH
	  ${PROJECT_SOURCE_DIR}/cmake/Modules
		${CMAKE_MODULE_PATH})
	${1}

# Single point of output for targets
snippet cmcustomoutput
	#-----------------------------------------------------------------------
	# Output binaries to a single directory tree, but split the tree into 
	# three braches, one each for RUNTIME, LIBRARY and ARCHIVE
	#
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/outputs/runtime)
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/outputs/library)
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/outputs/archive)
	${1}


